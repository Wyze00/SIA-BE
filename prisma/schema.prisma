generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  mahasiswa
  dosen
  admin
}

enum Jurusan {
  informatika
  dkv
  industri
  akuntansi
  olb
  management
  si
}

enum StatusMatkul {
  diambil
  dibatalkan
  lulus
  gagal
}

enum StatusAbsen {
  none
  izin
  alpha
  hadir
}

enum TipeNilaiMatkul {
  UTS
  UAS
  QUIZ1
  QUIZ2
  QUIZ3
  QUIZ4
  QUIZ5
}

model User {
  id       String @id @db.VarChar(10)
  role     Role
  password String @db.VarChar(100)
  name     String @db.VarChar(100)

  admin     Admin?
  dosen     Dosen?
  mahasiswa Mahasiswa?

  @@map("users")
}

model Mahasiswa {
  nim          String               @id @db.VarChar(10)
  jurusan      Jurusan
  semester     Int                  @db.TinyInt
  name         String               @db.VarChar(100)
  angkatan     String               @db.Char(4)
  user         User                 @relation(fields: [nim], references: [id])
  ambil_matkul MhsMengambilMatkul[]
  absen_matkul MhsMengabsenMatkul[]
  nilai_matkul MhsNilaiMatkul[]
  total_nilai  MhsTotalNilai[]

  @@map("mahasiswa")
}

model Dosen {
  nip  String @id @db.VarChar(10)
  name String @db.VarChar(100)
  user User   @relation(fields: [nip], references: [id])

  matkul Matkul[]

  @@map("dosen")
}

model Admin {
  id_admin   String @id @db.VarChar(10)
  departemen String @db.VarChar(100)
  name       String @db.VarChar(100)
  user       User   @relation(fields: [id_admin], references: [id])

  @@map("admin")
}

model Matkul {
  kode_matkul     String @id @db.VarChar(10)
  dosen_nip       String @db.VarChar(10)
  name            String @db.VarChar(50)
  total_pertemuan Int    @db.TinyInt
  total_sks       Int    @db.TinyInt

  dosen                  Dosen                @relation(fields: [dosen_nip], references: [nip])
  mahasiswa_ambil_matkul MhsMengambilMatkul[]
  mahasiswa_absen_matkul MhsMengabsenMatkul[]
  mahasiswa_nilai_matkul MhsNilaiMatkul[]
  rekomendasi_matkul     RekomendasiMatkul[]

  @@map("matkul")
}

model MhsMengambilMatkul {
  kode_matkul String       @db.VarChar(10)
  nim         String       @db.VarChar(10)
  semester    Int          @db.TinyInt
  nilai_huruf String?      @db.Char(2)
  status      StatusMatkul

  matkul    Matkul    @relation(fields: [kode_matkul], references: [kode_matkul])
  mahasiswa Mahasiswa @relation(fields: [nim], references: [nim])

  @@id([kode_matkul, nim, semester])
  @@map("mahasiswa_ambil_matkul")
}

model MhsMengabsenMatkul {
  kode_matkul String      @db.VarChar(10)
  nim         String      @db.VarChar(10)
  semester    Int         @db.TinyInt
  pertemuan   Int         @db.TinyInt
  status      StatusAbsen

  matkul    Matkul    @relation(fields: [kode_matkul], references: [kode_matkul])
  mahasiswa Mahasiswa @relation(fields: [nim], references: [nim])

  @@id([kode_matkul, nim, semester, pertemuan])
  @@map("mahasiswa_absen_matkul")
}

model MhsNilaiMatkul {
  kode_matkul String          @db.VarChar(10)
  nim         String          @db.VarChar(10)
  semester    Int             @db.TinyInt
  nilai       Float           @db.Float
  bobot       Float?          @db.Float
  tipe        TipeNilaiMatkul

  matkul    Matkul    @relation(fields: [kode_matkul], references: [kode_matkul])
  mahasiswa Mahasiswa @relation(fields: [nim], references: [nim])

  @@id([kode_matkul, nim, semester, tipe])
  @@map("mahasiswa_nilai_matkul")
}

model MhsTotalNilai {
  nim       String @db.VarChar(10)
  semester  Int    @db.TinyInt
  total_sks Int    @db.TinyInt
  ips       Float  @db.Float

  mahasiswa Mahasiswa @relation(fields: [nim], references: [nim])

  @@id([nim, semester])
  @@map("mahasiswa_total_nilai")
}

model RekomendasiMatkul {
  kode_matkul String  @db.VarChar(10)
  semester    Int     @db.TinyInt
  jurusan     Jurusan

  matkul Matkul @relation(fields: [kode_matkul], references: [kode_matkul])

  @@id([kode_matkul, semester, jurusan])
  @@map("rekomendasi_matkul")
}
